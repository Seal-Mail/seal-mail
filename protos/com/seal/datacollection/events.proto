syntax = "proto3";

package com.skiff.datacollection;
option go_package = "github.com/skiff-org/skiff-world/protobuf/datacollection";

enum NullValue {
    // Null value.
    NULL_VALUE = 0;
}

// The JSON representation for `ListValue` is JSON array.
message ListValue {
    // Repeated field of dynamically typed values.
    repeated Value values = 1;
}

message Value {
    // The kind of value.
    oneof kind {
        // Represents a null value.
        NullValue null_value = 1;
        // Represents a double value.
        double number_value = 2;
        // Represents a string value.
        string string_value = 3;
        // Represents a boolean value.
        bool bool_value = 4;
        // Represents a structured value.
        Struct struct_value = 5;
        // Represents a repeated `Value`.
        ListValue list_value = 6;
    }
}
message Struct {
    // Unordered map of dynamically typed values.
    map<string, Value> fields = 1;
}

message UserData {
    optional string userID = 1;
    optional string orgID = 2;
}

message Event {
    string eventSchemaVersion = 1;
    string eventSource = 2;
    string eventType = 3;
    // example: 1674078796018
    string epochTimeMillis = 4;
    // deprecated in favor of new super fields
    reserved 5;
    reserved "userData";
    reserved 6;
    reserved "eventData";
    optional Struct superEventData = 7;
    UserData superUserData = 8;
}
